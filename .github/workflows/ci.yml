name: CI
on: [push, pull_request]
#  schedule:
#    - cron: '0 0-23/4 * * *'
permissions:
  contents: read
jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x64
            arch: x64
            triplet: x64-windows
            configFlags: --enable-discord --enable-faad --enable-gif --enable-mikmod --enable-mpeg2 --enable-vpx
    env:
      CONFIGURATION: Release
      CCACHE_PATH: C:\\Users\\runneradmin\\.cargo\\bin
      PLATFORM: ${{ matrix.platform }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VCPKG_FEATURE_FLAGS: dependencygraph
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed
    permissions:
      contents: write # For dependencygraph
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ilammy/setup-nasm@v1
        if: matrix.useNasm == 'true'
      - name: ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: win-${{ matrix.platform }}
          max-size: 1G
      - name: Symlink ccache
        run: |
          Copy-Item "${{ env.CCACHE_PATH }}\\ccache.exe" -Destination "${{ env.CCACHE_PATH }}\\cl.exe"
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgGitCommitId: 943c5ef1c8f6b5e6ced092b242c8299caae2ff01
          doNotCache: false
      - name: Integrate vcpkg
        run: |
          ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/vcpkg integrate install
      - name: Build create_project
        run: |
          cd devtools/create_project/cmake
          cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache .
          cmake --build . -j 2
          ls
          cd ../../../
      - name: Call create_project
        run: |
          mkdir build-scummvm
          cd build-scummvm
          ../devtools/create_project/cmake/Debug/create_project.exe .. --msvc --vcpkg --enable-all-engines ${{ matrix.configFlags }}
          ls
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Build scummvm
        run: |
          cd build-scummvm
          ls
          msbuild scummvm.sln /m /p:VcpkgEnableManifest=true /p:BuildInParallel=true /p:Configuration=${{ env.CONFIGURATION }} /p:PreferredToolArchitecture=x64 /p:Platform=${{ matrix.platform }} /v:minimal /p:CLToolPath=${{ env.CCACHE_PATH }}
